    INFO: 2021-02-06 20:47:39,246:               log.py:   20: Logging to D:\Jordan_Williams\coding1\Coding\markdown\oracle db\mdpdf.log
   DEBUG: 2021-02-06 20:47:39,247:               cli.py:   72: oracle.md
    INFO: 2021-02-06 20:47:39,247:         converter.py:   16: oracle.md
   DEBUG: 2021-02-06 20:47:39,253:      pdf_renderer.py:  446: printSegment: Oracle commands
   DEBUG: 2021-02-06 20:47:39,255:      pdf_renderer.py:  446: printSegment: Over - Over Which
   DEBUG: 2021-02-06 20:47:39,256:      pdf_renderer.py:  446: printSegment: This command is similar to group by but it allows for for other columns to be added
   DEBUG: 2021-02-06 20:47:39,257:      pdf_renderer.py:  446: printSegment:  
   DEBUG: 2021-02-06 20:47:39,258:      pdf_renderer.py:  446: printSegment: it can be used with the 
   DEBUG: 2021-02-06 20:47:39,260:      pdf_renderer.py:  446: printSegment: partition by
   DEBUG: 2021-02-06 20:47:39,261:      pdf_renderer.py:  446: printSegment:  to get groups or used with 
   DEBUG: 2021-02-06 20:47:39,262:      pdf_renderer.py:  446: printSegment: order by
   DEBUG: 2021-02-06 20:47:39,262:      pdf_renderer.py:  446: printSegment:  to get an accumulation
   DEBUG: 2021-02-06 20:47:39,262:      pdf_renderer.py:  446: printSegment: Example
   DEBUG: 2021-02-06 20:47:39,262:      pdf_renderer.py:  446: printSegment: select sa.*,max(unitprice) over(partition by customerid) from sales
   DEBUG: 2021-02-06 20:47:39,262:      pdf_renderer.py:  446: printSegment: sa;
   DEBUG: 2021-02-06 20:47:39,263:      pdf_renderer.py:  446: printSegment: select sa.*,max(unitprice) over(order by customerid) from sales sa;
   DEBUG: 2021-02-06 20:47:39,263:      pdf_renderer.py:  446: printSegment: Cursor
   DEBUG: 2021-02-06 20:47:39,263:      pdf_renderer.py:  446: printSegment: These are values that vca be used to loop though. they come with specialised exceptions.
   DEBUG: 2021-02-06 20:47:39,263:      pdf_renderer.py:  446: printSegment: https://www.oracletutorial.com/plsql-tutorial/plsql-cursor-for-loop/
   DEBUG: 2021-02-06 20:47:39,263:      pdf_renderer.py:  446: printSegment:  
   DEBUG: 2021-02-06 20:47:39,264:      pdf_renderer.py:  446: printSegment: https://www.oracletutorial.com/plsql-tutorial/plsql-cursor-for-loop/
   DEBUG: 2021-02-06 20:47:39,264:      pdf_renderer.py:  446: printSegment: />
   DEBUG: 2021-02-06 20:47:39,264:      pdf_renderer.py:  446: printSegment: Example
   DEBUG: 2021-02-06 20:47:39,264:      pdf_renderer.py:  446: printSegment: set serveroutput on;
   DEBUG: 2021-02-06 20:47:39,264:      pdf_renderer.py:  446: printSegment: declare
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment:     cursor tester is
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment:     select * from sales;
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment: begin
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment:     for i in tester loop
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment:     
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment:         SYS.dbms_output.put_line(i.customerid);
   DEBUG: 2021-02-06 20:47:39,265:      pdf_renderer.py:  446: printSegment:     
   DEBUG: 2021-02-06 20:47:39,266:      pdf_renderer.py:  446: printSegment:     end loop;
   DEBUG: 2021-02-06 20:47:39,266:      pdf_renderer.py:  446: printSegment: end;
   DEBUG: 2021-02-06 20:47:39,267:      pdf_renderer.py:  446: printSegment: Cursor with parameters
   DEBUG: 2021-02-06 20:47:39,268:      pdf_renderer.py:  446: printSegment: set serveroutput on;
   DEBUG: 2021-02-06 20:47:39,268:      pdf_renderer.py:  446: printSegment: declare
   DEBUG: 2021-02-06 20:47:39,268:      pdf_renderer.py:  446: printSegment: cursor tester(x number) is
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment: select * from sales where customerid = x;
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment: begin
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment:     for i in tester(100) loop
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment:     
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment:         SYS.dbms_output.put_line(i.customerid);
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment:     
   DEBUG: 2021-02-06 20:47:39,269:      pdf_renderer.py:  446: printSegment:     end loop;
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:  446: printSegment: end;
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:  446: printSegment: Collections
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:   50: 0, [1, 'Oracle commands', 1, 68.0]
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:   50: 1, [2, 'Over - Over Which', 1, 106.0]
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:   50: 2, [3, 'Example', 1, 162.0]
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:   50: 3, [2, 'Cursor', 1, 244.0]
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:   50: 4, [3, 'Example', 1, 330.0]
   DEBUG: 2021-02-06 20:47:39,270:      pdf_renderer.py:   50: 5, [2, 'Collections', 1, 658.0]
